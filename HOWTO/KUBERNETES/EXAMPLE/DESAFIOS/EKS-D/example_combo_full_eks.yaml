---
apiVersion: v1
items:
  - apiVersion: v1
    kind: Namespace
    metadata:
      creationTimestamp: null
      name: teste
    spec: {}
    status:
      phase: Active
  - apiVersion: v1
    data:
      default.conf: |
        server {
            listen       8080;
            listen  [::]:8080;
            server_name  localhost;

            location / {
                root   /usr/share/nginx/html;
                index  index.html index.htm;
            }

            error_page   500 502 503 504  /50x.html;
            location = /50x.html {
                root   /usr/share/nginx/html;
            }
        }
    kind: ConfigMap
    metadata:
      creationTimestamp: null
      name: teste-config
      namespace: teste
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      creationTimestamp: null
      labels:
        app: teste-deployment
        env: teste
      name: teste-deployment
      namespace: teste
    spec:
      progressDeadlineSeconds: 600
      replicas: 1
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          app: teste-deployment
          env: teste
      strategy:
        rollingUpdate:
          maxSurge: 25%
          maxUnavailable: 25%
        type: RollingUpdate
      template:
        metadata:
          creationTimestamp: null
          labels:
            app: teste-deployment
            env: teste
        spec:
          containers:
            - image: nginx:stable
              imagePullPolicy: IfNotPresent
              name: teste-pod
              ports:
                - containerPort: 8080
                  protocol: TCP
              resources: {}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /etc/nginx/conf.d
                  name: teste-config
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
          volumes:
            - configMap:
                defaultMode: 420
                name: teste-config
              name: teste-config
    status: {}
  - apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        app: teste-deployment
        env: teste
      name: teste-deployment
      namespace: teste
    spec:
      externalTrafficPolicy: Cluster
      ports:
        - port: 8080
          protocol: TCP
          targetPort: 8080
      externalIPs:
        - "192.168.254.100"
      selector:
        app: teste-deployment
      sessionAffinity: None
      type: NodePort
    status:
      loadBalancer: {}
  - apiVersion: extensions/v1beta1
    kind: Ingress
    metadata:
      creationTimestamp: null
      name: teste-ingress
      namespace: teste
    spec:
      rules:
        - host: teste.info
          http:
            paths:
              - backend:
                  serviceName: teste-deployment
                  servicePort: 8080
                path: /
                pathType: Prefix
    status:
      loadBalancer: {}
kind: List
metadata: {}
